# CONFIGS DO .VIMRC ESTAO NO ARQUIVO PERSONALIZADO BASH EM : /$HOME/Personal_Bash/.bash_person_rzj

# show branch github in use in terminal bash
parse_git_branch() {
     git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/ (\1)/'
}
export PS1="\u@\h \[\033[32m\]\w\[\033[33m\]\$(parse_git_branch)\[\033[00m\] $ "

# explorador arquivos >> NERDTree :: c-n

# MUDAR LOCAL VIM_RC :: PARA PASTA ~/Personal_Vim :: AO INVES DO .VIMRC NA RAIZ
# export VIMINIT='source $MYVIMRC' # var que aponta o caminho de abertura do vim rc
# export MYVIMRC='~/.config/nvim/init.lua'
# apontando o arquivo init - se for conforme a extensao em uso .vim ou .lua e depois propag.

# export MYVIMRC='~/.vim/.vimrc'  # apontando caminho do vimrc que configura o vim.

# OBS: VARIAVEL $HOME == /home/rzj/

# DEFININDO VARIAVEIS DE AMBINETE PACOTE:
JAVA_HOME="/usr/lib/jvm/java-17-openjdk-amd64"

# MAVEN - dizer que Path recebe o Path : diretorio onde esta o binario mvn do maven
export PATH=$PATH:/home/rzj/maven/bin/

# KOTLIN - adicionar bin do novo pacote ao PATH caminho do sistema.
export PATH=$PATH:/home/rzj/_git_rzj/_programas_/kotlin/kotlinc/bin/
export PATH=$PATH:/home/rzj/_git_rzj/_programas_/intellij_Community/idea-IC-232.9559.62/bin/

# COMANDOS PERSONAL
alias propag="source ~/.bashrc"
# alias vim="nvim"
# alias v="nvim"
alias n="nvim"
alias c="code ."
alias e="exit"

#
# ACESSOS COM CD $var:: Configurar com 'c' de explorer antes do <artefato> :: acessar: cd $oApelido
export cbash="$HOME/Personal_Bash"
export cvim="$HOME/.vim"
export clvim="$HOME/.config/lvim"
export cgit="$HOME/..git"
export cnvim="$HOME/.config/nvim"

#  MESTRAS :: CADA UM CRIAR A MESTRA - 'c' ABRIR - 'e' EDITAR
export epgm="$HOME/..pgm/"
export ets="$HOME/..gitAll/typescript_javascript/"
export elibs="$HOME/..gitAll/RZ_Libs/"
export ebash="$HOME/Personal_Bash/"
export evscode="$HOME/.config/Code/User/"
export egitall="$HOME/..gitAll/"
export egit="$HOME/..gitbase/"
export egitestes="$HOME/..gitAll/gitestes"
export eimplementashow="$HOME/..gitAll/implementashow/"
export ebackups="$HOME/..backups/"
export etester="$HOME/..tester/"
export EDITOR_VIM="vim"
export EDITOR_NVIM="nvim"
export EDITOR_CODE="code"
export ejava="$HOME/..gitAll/java/"
export enota="$HOME/..gitAll/_notasPGM_/"


 # ABRIR :: ACESSO SEM CD **************

# ACESSAR E ABRIR NO VSCODE
alias opgm="cd $epgm"
alias ots="cd $ets"
alias olibs="cd $elibs"
alias obash="cd $ebash"
alias ogit="cd $egit"
alias ogitestes="cd $egitestes"
alias oback="cd $ebackups"
alias oshow="cd $eimplementashow"
alias ovs="cd $evscode"

# ACESSAR E ABRIR COM NVIM
alias ovim="cd ~/.vim/"

# SOMENTE ACESSAR
alias onvim="cd ~/.config/nvim/"
alias otema_nvim="cd ~/.config/nvim/colors/"
alias obash_rzj="cd ~/Personal_Bash"
alias ocpp="cd ~/..backend/cpp/"
alias otester="cd $etester"
alias ogitall="cd $egitall"
alias ojava="cd $ejava"
alias onota="cd $enota"
alias i="/home/rzj/_git_rzj/_programas_/intellij_Community/idea-IC-232.9559.62/bin/idea.sh" # itellij

# ObservacaoGeral: para refletir as alteracoes propag no terminal que tiver usando seja ele do bash ou do vscode.

# sistema
# atualizar sudo apt get
update() {
  sudo apt update
  sudo apt upgrade -y
  sudo apt autoremove -y
  sudo apt autoclean
  sudo apt clean
}

# FUNCOES_RZJ

lf() {
  compgen -A function
  # listar todas funcoes no shell
}

lfn() {
  set | grep $1
  # listar todas funcoes por nome_passado : lfn "Deno"
}

# neste_atalho: rodar arquivoDeno em autoReload
  # uso: dr ARGUMENTAR_O_ARQUIVO
  # dar_todas_permissoes_com: -A, Ã© abreviacao para o --allow-all
  # este_comandoOriginal_sem_atalho: deno run --watch --allow-net --allow-read --allow-env $1
  # parametro_para_argumentarem: $1

# Deno Scripts - enxerga ImportMapJSON ***********************

# DENO RUN
# DenoRun Normal <Argumentar_CaminhoArquivo>
dr() {
  deno run --watch -A $1
}
# denoRun_Enxerga_ImportMapJSON - <Argumentar_CaminhoArquivo>
drj() {
  deno run --watch -A --import-map import_map.json $1
}

# DENO TEST
# denoTestNORMAL
dt() {
  deno test --watch -A
  }

# denoTest_ImportMapJSON
dtj() {
  deno test -A --watch --import-map import_map.json
}

# Deno Scripts - NORMAL ***********************



# UPDATE DENO
denoup() {
  sudo deno upgrade
}

# EDITOR_VSCODE ***********************
keyvs() {
  $1 ~/.config/Code/User/keybindings.json
}

keynvim() {
  $1 ~/.config/nvim/keys/mappings.vim
}

exbash() {
  $1 ~/Personal_Bash/.bash_person_rzj
}

