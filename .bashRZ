# CONFIGS DO .VIMRC ESTAO NO ARQUIVO PERSONALIZADO BASH EM : /$HOME/Personal_Bash/.bash_person_rzj

# show branch github in use in terminal bash
parse_git_branch() {
     git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/ (\1)/'
}
export PS1="\u@\h \[\033[32m\]\w\[\033[33m\]\$(parse_git_branch)\[\033[00m\] $ "

# explorador arquivos >> NERDTree :: c-n

# MUDAR LOCAL VIM_RC :: PARA PASTA ~/Personal_Vim :: AO INVES DO .VIMRC NA RAIZ
# export VIMINIT='source $MYVIMRC' # var que aponta o caminho de abertura do vim rc
# export MYVIMRC='~/.config/nvim/init.lua'
# apontando o arquivo init - se for conforme a extensao em uso .vim ou .lua e depois propag.

# export MYVIMRC='~/.vim/.vimrc'  # apontando caminho do vimrc que configura o vim.

# ESSENCIAIS
alias obash_rzj="cd ~/Personal_Bash"
alias propag="source ~/.bashrc"
alias n="nvim"
alias c="code ."
alias e="exit"

#
# ACESSOS COM CD $var:: Configurar com 'c' de explorer antes do <artefato> :: acessar: cd $oApelido
export cbash="$HOME/Personal_Bash"

# EDITORES
export cnvim="$HOME/.config/nvim"
export cvim="$HOME/.vim"
export clvim="$HOME/.config/lvim"
alias i="/home/rzj/_git_rzj/_programas_/intellij_Community/idea-IC-232.9559.62/bin/idea.sh" # itellij

export cgit="$HOME/..git"

# NOVOS - SEM mestras $e
alias ojava="cd $HOME/_git_rzj/_base_linguagens_/java/"
alias onota="cd $HOME/_git_rzj/_notasPGM_/"
alias okotlin="cd $HOME/_git_rzj/_base_linguagens_/kotlin/kotlin_base/A_by_vscode/"

# -- SET VAR_AMBIENTE PACOTE --
# obs: preferir setar cada var com export VAR_ALVO
# JAVA --
export JAVA_HOME=/usr/lib/jvm/java-17-openjdk-amd64

# MAVEN - dizer que Path recebe o Path : diretorio onde esta o binario mvn do maven
export PATH=$PATH:/home/rzj/maven/bin/

# KOTLIN - adicionar bin do novo pacote ao PATH caminho do sistema.
export PATH=$PATH:/home/rzj/_git_rzj/_programas_/kotlin/kotlinc/bin/
export PATH=$PATH:/home/rzj/_git_rzj/_programas_/intellij_Community/idea-IC-232.9559.62/bin/

# SOMENTE ACESSAR
alias onvim="cd ~/.config/nvim/"
alias otema_nvim="cd ~/.config/nvim/colors/"

# SISTEMA
# atualizar sudo apt get
update() {
  sudo apt update
  sudo apt upgrade -y
  sudo apt autoremove -y
  sudo apt autoclean
  sudo apt clean
}

# FUNCOES_RZJ

lf() {
  compgen -A function
  # listar todas funcoes no shell
}

lfn() {
  set | grep $1
  # listar todas funcoes por nome_passado : lfn "Deno"
}

# neste_atalho: rodar arquivoDeno em autoReload
  # uso: dr ARGUMENTAR_O_ARQUIVO
  # dar_todas_permissoes_com: -A, Ã© abreviacao para o --allow-all
  # este_comandoOriginal_sem_atalho: deno run --watch --allow-net --allow-read --allow-env $1
  # parametro_para_argumentarem: $1

# Run Quarkus : rq
rq() {
  ./mvnw compile quarkus:dev
}

# Deno Scripts - enxerga ImportMapJSON ***********************

# DENO RUN
# DenoRun Normal <Argumentar_CaminhoArquivo>
dr() {
  deno run --watch -A $1
}
# denoRun_Enxerga_ImportMapJSON - <Argumentar_CaminhoArquivo>
drj() {
  deno run --watch -A --import-map import_map.json $1
}

# DENO TEST
# denoTestNORMAL
dt() {
  deno test --watch -A
  }

# denoTest_ImportMapJSON
dtj() {
  deno test -A --watch --import-map import_map.json
}

# Deno Scripts - NORMAL ***********************



# UPDATE DENO
denoup() {
  sudo deno upgrade
}

# EDITOR_VSCODE ***********************
keyvs() {
  $1 ~/.config/Code/User/keybindings.json
}

keynvim() {
  $1 ~/.config/nvim/keys/mappings.vim
}

exbash() {
  $1 ~/Personal_Bash/.bash_person_rzj
}

